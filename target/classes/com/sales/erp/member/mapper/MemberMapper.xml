<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sales.erp.member.dao.MemberMapper">
    
	 <!-- ID 확인 -->
	 <select id="ConfirmID_Member" resultType="com.sales.erp.member.vo.MemberVO">
		SELECT * FROM SMEMBER WHERE AUTH NOT LIKE 'ROLE_EE' AND EMPNO=(SELECT MIN(EMPNO) FROM SMEMBER WHERE NAME=#{name} AND EMAIL= #{email} )
	</select>
	
	<!-- PW 확인 -->
	 <select id="ConfirmPWD_Member" resultType="com.sales.erp.member.vo.MemberVO">
		SELECT * FROM SMEMBER WHERE AUTH NOT LIKE 'ROLE_EE' AND EMPNO=#{empno} AND NAME=#{name} AND EMAIL= #{email}
	</select>

    <!-- 사용자 정보 불러오기 -->
    <select id="getMemberEmpno" parameterType="java.lang.String" resultType="com.sales.erp.member.vo.MemberVO">
		SELECT * FROM SMEMBER WHERE EMPNO=#{empno}
	</select>
	
	<select id="getMember" parameterType="com.sales.erp.member.vo.MemberVO"
		resultType="com.sales.erp.member.vo.MemberVO">
		SELECT * FROM SMEMBER WHERE EMPNO=#{empno}
	</select>
	
	<select id="memberListCount" parameterType="com.sales.erp.member.vo.MemberSearch" resultType="java.lang.Integer">
    	SELECT COUNT(*) FROM SMEMBER WHERE AUTH NOT LIKE 'ROLE_EE' AND ${field} LIKE #{word}
    </select>
    
    <select id="memberListCountTeam" parameterType="com.sales.erp.member.vo.MemberSearch" resultType="java.lang.Integer">
    	SELECT COUNT(*) FROM SMEMBER WHERE AUTH NOT LIKE 'ROLE_EE' AND ${field} LIKE #{word} AND TEAM LIKE #{team}
    </select>
    
    <select id="memberList" parameterType="com.sales.erp.member.vo.MemberSearch" resultType="com.sales.erp.member.vo.MemberVO">
		<![CDATA[
		SELECT * FROM (SELECT A.*,ROWNUM R FROM (SELECT * FROM SMEMBER WHERE ${field} LIKE #{word} AND AUTH NOT LIKE 'ROLE_EE' ORDER BY EMPNO ASC) A) WHERE R >= #{start} AND R <= #{end}
		]]>
	</select>
	
	<select id="memberListTeam" parameterType="com.sales.erp.member.vo.MemberSearch" resultType="com.sales.erp.member.vo.MemberVO">
		<![CDATA[
		SELECT * FROM (SELECT A.*,ROWNUM R FROM (SELECT * FROM SMEMBER WHERE ${field} LIKE #{word} AND AUTH NOT LIKE 'ROLE_EE' AND TEAM LIKE #{team} ORDER BY EMPNO ASC) A) WHERE R >= #{start} AND R <= #{end}
		]]>
	</select>
	
	<!-- 개인정보수정 -->
	<update id="memberUpdate" parameterType="com.sales.erp.member.vo.MemberJoinVO" >    
    	UPDATE SMEMBER SET NAME=#{name}, PWD=#{pwd}, ADDRESS=#{address}, PHONE=#{phone}, EMAIL=#{email}, ACCOUNT=#{account}, PORTRAIT=#{portrait} WHERE EMPNO=#{empno}         
    </update>
    
    <!-- 사원 가입대기 리스트 숫자 -->
    <update id="memberUpdateA" parameterType="com.sales.erp.member.vo.MemberVO" >    
    	UPDATE SMEMBER SET AUTH=#{auth}, TEAM=#{team} WHERE EMPNO=#{empno}         
    </update>
    
    <!-- 사원 가입대기 리스트 숫자-->
    <select id="memberListWaitCount" parameterType="com.sales.erp.member.vo.MemberSearch" resultType="java.lang.Integer">
    	SELECT COUNT(*) FROM SMEMBER WHERE AUTH LIKE 'ROLE_EE'
    </select>
    
    <!-- 사원 가입대기 리스트 -->
    <select id="memberListWait" parameterType="com.sales.erp.member.vo.MemberSearch" resultType="com.sales.erp.member.vo.MemberVO">
		<![CDATA[
		SELECT * FROM (SELECT A.*,ROWNUM R FROM (SELECT * FROM SMEMBER WHERE AUTH LIKE 'ROLE_EE' ORDER BY EMPNO ASC) A) WHERE R>=#{start} AND R<=#{end}
		]]>
	</select>
	
	<!-- 사원 가입승인 -->
	<update id="Approve" parameterType="com.sales.erp.member.vo.MemberVO" >    
    	UPDATE SMEMBER SET AUTH='ROLE_EMPLOYEE' WHERE EMPNO=#{empno}        
    </update>
    
    <!-- 사원 가입승인거부 -->
    <delete id="Cancel" parameterType="com.sales.erp.member.vo.MemberVO" >    
    	DELETE FROM SMEMBER WHERE EMPNO=#{empno}        
    </delete>
    
    <insert id="JoinMember" parameterType="com.sales.erp.member.vo.MemberVO" >
        INSERT INTO SMEMBER (EMPNO, PWD, NAME, GENDER, BIRTH, JOIN, ADDRESS, PHONE, EMAIL, AUTH, PORTRAIT, ACCOUNT, TEAM)
        VALUES(to_char(numregister.nextval), #{pwd}, #{name}, #{gender}, #{birth}, SYSDATE, #{address}, #{phone}, #{email}, #{auth}, #{portrait}, #{account}, #{team})
    </insert>
</mapper>