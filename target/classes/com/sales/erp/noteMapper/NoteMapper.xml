<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sales.erp.noteDAO.NoteMapper">
	<select id="selectReceive" parameterType="java.lang.String" resultType="com.sales.erp.noteVO.NoteVO">
		SELECT * FROM (SELECT ROWNUM R, NOTENUM, SENDDATE, SENDER, RECEIVER, TITLE, CONTENT, CHECKS, DELETED FROM (SELECT * FROM NOTEDB WHERE RECEIVER=#{empno} ORDER BY SENDDATE DESC) WHERE DELETED=0) WHERE R<![CDATA[>=]]>1 AND R<![CDATA[<=]]>10
	</select>
	
	<select id="selectSend" parameterType="java.lang.String" resultType="com.sales.erp.noteVO.NoteVO">
		SELECT * FROM (SELECT ROWNUM R, NOTENUM, SENDDATE, SENDER, RECEIVER, TITLE, CONTENT, CHECKS, DELETED FROM (SELECT * FROM NOTEDB WHERE SENDER=#{empno} ORDER BY SENDDATE DESC) WHERE DELETED=0) WHERE R<![CDATA[>=]]>1 AND R<![CDATA[<=]]>10
	</select>
	
	<select id="viewNote" parameterType="java.lang.Integer" resultType="com.sales.erp.noteVO.NoteVO">
		SELECT * FROM NOTEDB WHERE NOTENUM = #{noteNum} AND DELETED=0
	</select>
	
	<select id="countReceiveAll" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM NOTEDB WHERE RECEIVER = #{empno} AND DELETED=0
	</select>
	
	<select id="countSendAll" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM NOTEDB WHERE SENDER = #{empno} AND DELETED=0
	</select>
	
	<select id="selectReceiveAll" parameterType="com.sales.erp.noteVO.NoteSearchVO" resultType="com.sales.erp.noteVO.NoteVO">
		SELECT * FROM (SELECT ROWNUM R, NOTENUM, SENDDATE, SENDER, RECEIVER, TITLE, CONTENT, CHECKS, DELETED FROM NOTEDB WHERE RECEIVER=#{empno} ORDER BY SENDDATE) WHERE ${field} LIKE #{keyword} AND R<![CDATA[>=]]>#{start} AND R<![CDATA[<=]]>#{end} AND DELETED=0 ORDER BY R DESC
	</select>
	
	<select id="selectSendAll" parameterType="com.sales.erp.noteVO.NoteSearchVO" resultType="com.sales.erp.noteVO.NoteVO">
		SELECT * FROM (SELECT ROWNUM R, NOTENUM, SENDDATE, SENDER, RECEIVER, TITLE, CONTENT, CHECKS, DELETED FROM NOTEDB WHERE SENDER=#{empno} ORDER BY SENDDATE) WHERE ${field} LIKE #{keyword} AND R<![CDATA[>=]]>#{start} AND R<![CDATA[<=]]>#{end} AND DELETED=0 ORDER BY R DESC
	</select>

	<update id="checkNote" parameterType="java.lang.Integer">
		UPDATE NOTEDB SET CHECKS=1 WHERE NOTENUM = #{noteNum}
	</update>
	
	<select id="receiverCheck" parameterType="java.lang.String" resultType="com.sales.erp.smember.SMemberVO">
		SELECT EMPNO, NAME, AUTH, TEAM FROM SMEMBER WHERE EMPNO!=#{empno} AND AUTH!='ROLE_EE' ORDER BY TEAM, AUTH
	</select>	
	
	<select id="getNameTeamAuth" parameterType="java.lang.String" resultType="com.sales.erp.smember.SMemberVO">
		SELECT EMPNO, NAME, AUTH, TEAM FROM SMEMBER WHERE EMPNO=#{empno}
	</select>
	
	<insert id="writePro" parameterType="com.sales.erp.noteVO.NoteVO">
		INSERT INTO NOTEDB (NOTENUM, SENDDATE, SENDER, RECEIVER, TITLE, CONTENT, CHECKS, DELETED)
		VALUES(NOTESEQ.NEXTVAL, SYSDATE, #{sender}, #{receiver}, #{title}, #{content}, 0, 0)
	</insert>
	<!-- 
    <insert id="insertMember" parameterType="com.sales.erp.smember.SMemberVO" >
        INSERT INTO SMEMBER (EMPNO, PWD, NAME, GENDER, BIRTH, JOIN, ADDRESS, PHONE, EMAIL, AUTH, PORTRAIT, ACCOUNT, TEAM)
        VALUES(to_char(numregister.nextval), #{pwd}, #{name}, '남자', null, null, null, #{phone},	null,	#{auth},	null, #{account},	#{team})
    </insert>
    
    <select id="selectSMember" resultType="com.sales.erp.smember.SMemberVO">
		SELECT * FROM SMEMBER WHERE EMPNO=#{empno}
	</select> -->
</mapper>
